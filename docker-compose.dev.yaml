version: '3.8'

services:
  # Loki - Centralized log storage
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./config/loki/local-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
      - loki-wal:/wal
    networks:
      - observability-stack
    restart: unless-stopped

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:10.1.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - observability-stack
    depends_on:
      - loki
    restart: unless-stopped

  # Promtail - Log collection agent (optional, for collecting logs from microservices)
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./config/promtail/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - observability-stack
    depends_on:
      - loki
    restart: unless-stopped

volumes:
  loki-data:
    driver: local
  grafana-data:
    driver: local
  loki-wal:
    driver: local

# IMPORTANT: This network must also be used by your microservices' docker-compose file.
# If it does not exist, create it with: docker network create observability-stack
networks:
  observability-stack:
    external: true 